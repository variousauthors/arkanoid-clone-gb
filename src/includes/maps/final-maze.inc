IF !DEF(FINAL_MAZE_INC)
FINAL_MAZE_INC = 1

/** the top left corner metatile is the "blank" tile
 * which is used to fill in anything that falls off the
 * map... tree for a forest, water for an island, black
 * or stone for a cave... */

Section "FinalMaze", ROMX, BANK[1]
FinalMaze:
  db 18, 50, HIGH(FinalMazeAutoEvents), LOW(FinalMazeAutoEvents)
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0e, $00, $00, $00, $0b, $00, $00, $00, $0d, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $01, $06, $0b, $0b, $0b, $0b, $0b, $06, $01, $06, $0b, $0b, $0b, $0b, $0b, $06, $01, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $00, $0b, $00, $00, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $0b, $00, $00, $00, $0b, $0b, $0b, $00, $0b, $00, $0b, $0b, $0b, $00, $00, $00, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $0b, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $0b, $0b, $0b, $0b, 
  db $0b, $00, $0d, $00, $00, $00, $0b, $00, $0b, $00, $0b, $00, $00, $00, $0d, $00, $0b, $0b, $0b, $0b, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $0b, $0b, $0b, 
  db $0b, $00, $00, $00, $0b, $00, $0b, $00, $00, $00, $0b, $00, $0b, $00, $00, $00, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $00, $00, $00, $00, $00, $00, $0b, $06, $06, $06, $0b, $00, $00, $00, $00, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $00, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $0b, $0b, 
  db $0e, $0b, $0b, $0b, $0b, $0b, $0b, $06, $0e, $06, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $00, $0b, $0b, $0b, $0b, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $00, $00, $0b, $00, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $00, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $0e, $06, $0b, $0b, $0b, $0b, $0e, $00, $0b, $0b, $0b, $0b, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $06, $06, $06, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $00, $0b, $0b, $00, $00, $0b, $00, $00, $00, $0b, $00, $00, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $00, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $00, $0b, $0b, $0b, $00, $0b, $0b, $0b, $00, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 
  db $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0e, $0b, $0b, $0b, $0e, $0b, $0b, $0b, $0e, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, 

; swap s/ (\d+, \d+)(.*,)(\d+, \d+)/\3\2\1
FinalMazeAutoEvents:
  ; overworld

  EndList

FinalMazeTriggerEvents:
  EndList

ENDC
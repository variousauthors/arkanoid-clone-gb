IF !DEF(OVERWORLD_INC)
OVERWORLD_INC = 1

/** the top left corner metatile is the "blank" tile
 * which is used to fill in anything that falls off the
 * map... tree for a forest, water for an island, black
 * or stone for a cave... */

Section "Overworld", ROM0
Overworld:
  db 36, 50, HIGH(OverworldAutoEvents), LOW(OverworldAutoEvents)
  db $04, $04, $04, $02, $02, $02, $07, $06, $06, $06, $06, $04, $04, $04, $04, $04, $02, $06, $06, $06, $06, $07, $02, $02, $02, $02, $02, $04, $04, $04, $0f, $0f, $0f, $04, $04, $04, $04, $04, $04, $04, $01, $02, $06, $06, $06, $06, $04, $04, $04, $04, 
  db $04, $04, $06, $07, $02, $02, $02, $02, $07, $06, $06, $06, $04, $04, $04, $07, $02, $02, $07, $06, $06, $06, $06, $07, $02, $02, $02, $02, $01, $0f, $0f, $01, $0f, $0f, $0f, $0f, $04, $0f, $04, $01, $06, $02, $02, $06, $06, $06, $06, $04, $04, $04, 
  db $04, $06, $01, $06, $07, $02, $02, $02, $02, $09, $06, $06, $06, $05, $06, $06, $07, $07, $06, $06, $06, $06, $06, $06, $07, $02, $02, $02, $02, $01, $01, $01, $01, $0f, $06, $06, $0f, $04, $0f, $04, $06, $01, $02, $06, $0f, $0f, $06, $06, $04, $04, 
  db $04, $06, $01, $01, $06, $07, $02, $02, $02, $02, $06, $06, $06, $04, $07, $02, $02, $07, $06, $06, $06, $06, $06, $06, $06, $07, $02, $02, $0b, $02, $01, $01, $0f, $06, $06, $06, $06, $01, $04, $0f, $0f, $06, $06, $0f, $04, $04, $0f, $06, $05, $06, 
  db $04, $06, $01, $01, $01, $06, $09, $02, $06, $02, $02, $07, $02, $04, $02, $02, $02, $02, $07, $07, $06, $06, $06, $06, $06, $06, $02, $02, $09, $01, $02, $01, $01, $0f, $01, $06, $01, $04, $0f, $04, $04, $0f, $0f, $04, $04, $0f, $04, $04, $04, $06, 
  db $06, $01, $01, $06, $01, $01, $07, $02, $02, $07, $02, $06, $04, $04, $02, $02, $02, $02, $02, $02, $02, $02, $02, $07, $06, $06, $06, $02, $02, $01, $01, $02, $02, $01, $0f, $04, $0f, $0f, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $06, 
  db $01, $01, $01, $01, $01, $01, $06, $07, $02, $02, $02, $02, $04, $02, $02, $02, $02, $09, $02, $07, $02, $02, $02, $02, $07, $06, $06, $07, $02, $01, $01, $01, $02, $01, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $06, 
  db $01, $01, $01, $02, $01, $01, $06, $06, $07, $02, $02, $02, $04, $02, $02, $07, $02, $06, $06, $06, $07, $02, $02, $02, $02, $06, $06, $06, $02, $02, $01, $01, $01, $02, $04, $04, $0f, $0f, $06, $04, $0f, $04, $02, $04, $04, $04, $04, $04, $04, $06, 
  db $04, $06, $01, $01, $02, $07, $02, $07, $07, $02, $0b, $02, $04, $04, $02, $01, $01, $02, $01, $06, $06, $07, $02, $02, $02, $06, $06, $06, $07, $02, $02, $01, $01, $01, $02, $04, $0f, $06, $0f, $06, $04, $0f, $06, $02, $04, $01, $04, $04, $02, $06, 
  db $04, $01, $01, $01, $01, $02, $02, $02, $07, $01, $01, $02, $06, $05, $01, $01, $01, $07, $02, $01, $06, $06, $07, $02, $02, $06, $06, $06, $06, $02, $02, $02, $01, $06, $06, $05, $06, $0f, $06, $06, $05, $06, $0f, $06, $02, $0f, $04, $02, $01, $06, 
  db $04, $01, $01, $01, $06, $07, $02, $02, $02, $02, $02, $06, $06, $04, $08, $06, $01, $01, $02, $02, $01, $01, $02, $02, $02, $07, $06, $06, $06, $07, $02, $02, $01, $06, $0f, $04, $0f, $0f, $0f, $04, $0f, $04, $06, $06, $05, $06, $04, $02, $01, $04, 
  db $01, $01, $01, $06, $07, $02, $02, $01, $02, $07, $06, $06, $04, $04, $04, $01, $06, $01, $01, $07, $02, $01, $07, $02, $02, $02, $02, $07, $06, $06, $07, $02, $06, $04, $06, $0f, $04, $0f, $04, $04, $04, $04, $0f, $02, $04, $04, $01, $01, $06, $04, 
  db $01, $01, $01, $01, $07, $02, $01, $01, $01, $02, $06, $01, $04, $04, $04, $04, $06, $06, $06, $06, $02, $01, $07, $02, $02, $02, $02, $02, $07, $06, $07, $02, $02, $04, $02, $06, $0f, $04, $04, $0f, $0f, $04, $0f, $06, $02, $04, $01, $04, $04, $04, 
  db $06, $01, $01, $06, $01, $07, $01, $02, $02, $02, $06, $01, $04, $04, $04, $04, $04, $04, $01, $06, $02, $07, $02, $07, $02, $02, $02, $02, $02, $07, $02, $02, $02, $04, $04, $02, $0f, $0f, $0f, $04, $04, $0f, $04, $06, $02, $04, $06, $05, $06, $04, 
  db $06, $01, $01, $01, $01, $07, $02, $02, $01, $02, $02, $06, $08, $01, $04, $04, $0a, $04, $04, $01, $01, $02, $02, $01, $07, $01, $02, $02, $02, $07, $02, $0b, $02, $02, $04, $02, $06, $06, $06, $05, $01, $04, $0f, $06, $02, $04, $04, $04, $01, $06, 
  db $06, $02, $06, $01, $01, $01, $07, $01, $01, $02, $07, $06, $06, $06, $06, $04, $04, $04, $04, $01, $07, $02, $07, $06, $01, $06, $01, $02, $02, $07, $07, $09, $02, $06, $02, $01, $06, $06, $04, $04, $06, $05, $06, $06, $04, $04, $04, $04, $02, $06, 
  db $04, $07, $02, $01, $01, $01, $07, $01, $02, $02, $02, $07, $06, $06, $02, $04, $01, $04, $04, $08, $02, $02, $02, $07, $07, $06, $06, $02, $02, $02, $07, $07, $02, $06, $02, $01, $01, $04, $04, $0f, $06, $04, $04, $04, $04, $04, $04, $04, $02, $06, 
  db $04, $04, $02, $02, $01, $01, $02, $01, $07, $07, $02, $07, $07, $02, $0b, $04, $01, $01, $01, $07, $02, $02, $02, $02, $01, $06, $09, $06, $02, $02, $02, $02, $02, $06, $06, $02, $01, $04, $0f, $04, $0f, $06, $04, $04, $04, $04, $04, $02, $02, $01, 
  db $04, $04, $04, $02, $01, $01, $02, $06, $01, $07, $02, $02, $07, $07, $09, $04, $04, $07, $02, $02, $02, $02, $02, $02, $06, $06, $06, $02, $02, $02, $02, $02, $02, $06, $04, $01, $06, $0f, $04, $0f, $0f, $01, $01, $04, $04, $04, $04, $02, $01, $01, 
  db $04, $04, $04, $04, $06, $02, $01, $06, $06, $07, $02, $02, $02, $02, $02, $02, $04, $02, $02, $02, $02, $02, $07, $02, $02, $02, $02, $02, $00, $00, $00, $02, $02, $06, $04, $06, $0f, $04, $0f, $0f, $01, $01, $01, $04, $04, $04, $02, $02, $01, $06, 
  db $04, $02, $04, $04, $06, $02, $01, $01, $02, $02, $02, $02, $07, $02, $02, $04, $04, $09, $02, $01, $02, $02, $02, $07, $02, $02, $02, $00, $00, $00, $00, $00, $02, $06, $04, $04, $04, $0f, $0f, $02, $02, $02, $01, $04, $04, $02, $02, $06, $01, $02, 
  db $02, $06, $06, $04, $01, $02, $06, $01, $07, $02, $02, $07, $06, $09, $02, $04, $02, $01, $01, $06, $01, $02, $02, $02, $00, $00, $00, $00, $00, $02, $02, $00, $06, $06, $06, $04, $04, $0f, $02, $01, $01, $06, $02, $04, $04, $06, $01, $09, $02, $04, 
  db $02, $09, $01, $04, $01, $06, $02, $06, $02, $07, $01, $01, $06, $06, $02, $04, $02, $01, $06, $01, $01, $02, $00, $00, $00, $00, $00, $00, $02, $02, $02, $06, $06, $06, $06, $05, $06, $06, $06, $01, $06, $01, $0b, $04, $06, $01, $02, $04, $04, $04, 
  db $01, $01, $06, $04, $06, $01, $02, $06, $06, $01, $01, $06, $01, $06, $06, $04, $04, $04, $04, $01, $01, $06, $06, $02, $00, $00, $00, $00, $02, $02, $02, $06, $06, $06, $06, $04, $04, $06, $02, $07, $01, $06, $02, $04, $01, $01, $04, $04, $02, $04, 
  db $06, $06, $04, $04, $06, $01, $06, $06, $06, $02, $01, $01, $06, $02, $02, $01, $01, $06, $04, $01, $02, $02, $07, $02, $02, $00, $00, $00, $00, $00, $00, $02, $02, $06, $06, $04, $04, $06, $06, $02, $02, $02, $04, $04, $04, $04, $04, $02, $09, $04, 
  db $06, $04, $04, $04, $02, $06, $06, $06, $02, $02, $06, $06, $01, $02, $01, $06, $01, $06, $04, $01, $01, $02, $02, $07, $02, $00, $00, $02, $02, $02, $00, $00, $02, $06, $06, $04, $04, $04, $06, $06, $02, $06, $06, $05, $06, $04, $04, $02, $0f, $04, 
  db $04, $04, $04, $04, $02, $02, $06, $06, $02, $09, $01, $06, $01, $01, $06, $06, $06, $04, $04, $01, $06, $01, $02, $07, $07, $00, $02, $02, $02, $02, $02, $00, $02, $06, $04, $04, $04, $04, $04, $06, $06, $06, $04, $04, $06, $01, $04, $04, $06, $0f, 
  db $04, $04, $04, $02, $02, $06, $06, $06, $06, $01, $06, $01, $06, $06, $04, $04, $04, $04, $01, $06, $01, $06, $07, $06, $04, $04, $04, $07, $02, $02, $02, $06, $02, $06, $04, $04, $04, $04, $04, $04, $04, $04, $04, $01, $06, $06, $06, $04, $06, $0f, 
  db $04, $04, $01, $02, $06, $06, $06, $02, $02, $02, $04, $04, $04, $04, $04, $06, $01, $06, $01, $01, $06, $02, $07, $06, $04, $04, $04, $04, $02, $02, $06, $06, $02, $06, $04, $04, $04, $04, $04, $04, $04, $0f, $01, $06, $07, $04, $04, $04, $06, $02, 
  db $04, $01, $02, $06, $06, $06, $02, $02, $09, $02, $04, $06, $02, $02, $04, $01, $06, $01, $01, $02, $02, $02, $07, $04, $04, $04, $04, $04, $04, $06, $02, $06, $02, $06, $04, $04, $04, $04, $04, $04, $0f, $04, $0f, $04, $04, $04, $06, $05, $06, $02, 
  db $04, $01, $02, $06, $06, $02, $02, $06, $06, $06, $05, $06, $08, $0b, $02, $04, $01, $06, $06, $02, $02, $07, $06, $04, $0b, $02, $01, $04, $04, $04, $06, $02, $06, $06, $04, $04, $04, $04, $04, $02, $04, $0f, $04, $04, $01, $06, $0f, $04, $02, $01, 
  db $04, $06, $06, $06, $02, $02, $01, $06, $04, $04, $04, $06, $06, $02, $02, $04, $01, $06, $02, $02, $07, $06, $04, $04, $09, $01, $06, $01, $04, $01, $06, $06, $06, $04, $04, $04, $04, $04, $02, $02, $06, $06, $0f, $0f, $0f, $04, $04, $01, $01, $04, 
  db $04, $06, $06, $09, $02, $02, $02, $04, $04, $04, $04, $04, $04, $04, $02, $04, $06, $06, $02, $02, $06, $04, $04, $01, $01, $06, $06, $04, $04, $04, $06, $06, $04, $04, $04, $04, $04, $06, $02, $06, $06, $06, $0f, $04, $04, $0f, $04, $04, $04, $04, 
  db $04, $06, $06, $02, $04, $04, $04, $04, $04, $06, $05, $06, $06, $04, $04, $04, $02, $06, $06, $02, $06, $06, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $06, $02, $02, $06, $06, $06, $06, $04, $04, $04, $04, $04, $04, $04, $04, 
  db $04, $04, $06, $06, $05, $06, $01, $04, $01, $06, $04, $04, $06, $09, $04, $04, $02, $06, $04, $04, $04, $06, $06, $06, $06, $04, $04, $04, $09, $01, $06, $04, $04, $04, $09, $06, $06, $06, $06, $06, $06, $04, $04, $04, $04, $04, $04, $04, $04, $04, 
  db $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $06, $06, $05, $06, $06, $06, $06, $04, $04, $04, $01, $01, $06, $04, $04, $04, $06, $06, $06, $06, $06, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, 

OverworldAutoEvents:
  ; underworld
  AllocateTransportEvent 34, 13, HIGH(Underworld), LOW(Underworld), 68, 26
  AllocateTransportEvent 34, 28, HIGH(Underworld), LOW(Underworld), 68, 56
  AllocateTransportEvent 34, 34, HIGH(Underworld), LOW(Underworld), 68, 68
  AllocateTransportEvent 32, 3, HIGH(Underworld), LOW(Underworld), 64, 6
  AllocateTransportEvent 31, 6, HIGH(Underworld), LOW(Underworld), 62, 12
  AllocateTransportEvent 31, 24, HIGH(Underworld), LOW(Underworld), 62, 48
  AllocateTransportEvent 29, 8, HIGH(Underworld), LOW(Underworld), 58, 16
  AllocateTransportEvent 26, 9, HIGH(Underworld), LOW(Underworld), 52, 18
  AllocateTransportEvent 25, 16, HIGH(Underworld), LOW(Underworld), 50, 32
  AllocateTransportEvent 24, 48, HIGH(Underworld), LOW(Underworld), 48, 96
  AllocateTransportEvent 22, 1, HIGH(Underworld), LOW(Underworld), 44, 2
  AllocateTransportEvent 21, 13, HIGH(Underworld), LOW(Underworld), 42, 26
  AllocateTransportEvent 21, 47, HIGH(Underworld), LOW(Underworld), 42, 94
  AllocateTransportEvent 20, 17, HIGH(Underworld), LOW(Underworld), 40, 34
  AllocateTransportEvent 18, 14, HIGH(Underworld), LOW(Underworld), 36, 28
  AllocateTransportEvent 17, 26, HIGH(Underworld), LOW(Underworld), 34, 52
  AllocateTransportEvent 15, 31, HIGH(Underworld), LOW(Underworld), 30, 62
  AllocateTransportEvent 6, 17, HIGH(Underworld), LOW(Underworld), 12, 34
  AllocateTransportEvent 4, 6, HIGH(Underworld), LOW(Underworld), 8, 12
  AllocateTransportEvent 4, 28, HIGH(Underworld), LOW(Underworld), 8, 56
  AllocateTransportEvent 2, 9, HIGH(Underworld), LOW(Underworld), 4, 18

  ; sub-maps
  AllocateTransportEvent 34, 6, HIGH(Ford01), LOW(Ford01), 3, 0
  AllocateTransportEvent 34, 8, HIGH(Ford01), LOW(Ford01), 2, 9
  AllocateTransportEvent 30, 12, HIGH(Start), LOW(Start), 4, 0
  AllocateTransportEvent 2, 31, HIGH(OldSwamp), LOW(OldSwamp), 4, 9
  AllocateTransportEvent 3, 37, HIGH(SwampTunnelWest), LOW(SwampTunnelWest), 3, 0
  AllocateTransportEvent 1, 39, HIGH(SwampTunnelEast), LOW(SwampTunnelEast), 6, 9
  AllocateTransportEvent 22, 41, HIGH(RuinedTemple), LOW(RuinedTemple), 1, 0
  AllocateTransportEvent 31, 29, HIGH(TwinsCrossingEast), LOW(TwinsCrossingEast), 3, 9
  AllocateTransportEvent 31, 27, HIGH(TwinsCrossingWest), LOW(TwinsCrossingWest), 6, 0
  AllocateTransportEvent 18, 8, HIGH(OldPond), LOW(OldPond), 8, 5
  AllocateTransportEvent 29, 1, HIGH(CoastalGrove), LOW(CoastalGrove), 8, 2
  AllocateTransportEvent 9, 10, HIGH(NorthForestTemple), LOW(NorthForestTemple), 8, 1
  AllocateTransportEvent 12, 8, HIGH(CentralForestTemple), LOW(CentralForestTemple), 1, 0
  AllocateTransportEvent 14, 8, HIGH(SouthForestTemple), LOW(SouthForestTemple), 2, 0
  AllocateTransportEvent 8, 45, HIGH(PeninsulaRuins), LOW(PeninsulaRuins), 8, 4
  AllocateTransportEvent 6, 33, HIGH(OldSwampSouth), LOW(OldSwampSouth), 0, 3
  AllocateTransportEvent 16, 16, HIGH(TowerApproach), LOW(TowerApproach), 17, 4

  ; desert
  AllocateTransportEvent 22, 22, HIGH(Desert), LOW(Desert), 44, 0
  AllocateTransportEvent 26, 25, HIGH(Desert), LOW(Desert), 80, 40
  AllocateTransportEvent 26, 31, HIGH(Desert), LOW(Desert), 80, 89
  AllocateTransportEvent 21, 31, HIGH(Desert), LOW(Desert), 36, 89

  ; in case they exit the desert and walk back in right away
  AllocateTransportEvent 23, 22, HIGH(Desert), LOW(Desert), 44, 0
  AllocateTransportEvent 25, 25, HIGH(Desert), LOW(Desert), 80, 40
  AllocateTransportEvent 25, 31, HIGH(Desert), LOW(Desert), 80, 89
  AllocateTransportEvent 20, 31, HIGH(Desert), LOW(Desert), 36, 89

  ; ruins
  AllocateTransportEvent 14, 12, HIGH(RuinsOne), LOW(RuinsOne), 17, 11
  AllocateTransportEvent 10, 14, HIGH(RuinsTwo), LOW(RuinsTwo), 0, 11
  AllocateTransportEvent 16, 19, HIGH(RuinsThree), LOW(RuinsThree), 0, 9

  ; tower

  EndList

OverworldTriggerEvents:
  EndList

ENDC